{"version":3,"sources":["rectangle.js","collision_detection.js","canvas.js"],"names":["findCornerCoordinates","x","y","midPointX","midPointY","rotationAngle","translatedX","translatedY","rotatedX","Math","cos","sin","rotatedY","finalX","finalY","Rectangle","width","height","PI","dX","dY","projectCornerToAxis","corner","axis","projectedX","projectedY","scalarValues","projectedCorners","map","checkScalarForColision","scalar1","scalar2","min1","min","max1","max","min2","max2","isCollided","rect1","rect2","axis1","topRight","topLeft","axis2","bottomRight","axis3","bottomLeft","axis4","corners1","corners2","axes","i","corners1ToAxis","corners2ToAxis","length","window","addEventListener","canvas","document","querySelector","ctx","getContext","rotatedRect","testRect","draw","fps","fpsInterval","then","performance","now","drawRect","rect","save","translate","rotate","fillRect","restore","animate","requestAnimationFrame","elapsed","clearRect","updatePos","fillStyle","key"],"mappings":"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","file":"canvas.00467ef7.map","sourceRoot":"..","sourcesContent":["const findCornerCoordinates = (x, y, midPointX, midPointY, rotationAngle) => {\n  // translate to reference (0, 0)\n  const translatedX = x - midPointX;\n  const translatedY = y - midPointY;\n\n  const rotatedX = translatedX * Math.cos(rotationAngle) - translatedY * Math.sin(rotationAngle);\n  const rotatedY = translatedX * Math.sin(rotationAngle) + translatedY * Math.cos(rotationAngle);\n\n  // translate back to original reference (midPointX, midPointY)\n  const finalX = rotatedX + midPointX;\n  const finalY = rotatedY + midPointY;\n\n  return { x: finalX, y: finalY };\n};\n\n\nclass Rectangle {\n  constructor(x, y, width, height, rotationAngle) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.midPointX = x + this.width / 2;\n    this.midPointY = y + this.height / 2;\n    this.rotationAngle = rotationAngle * Math.PI / 180;\n\n    this.dX = 0;\n    this.dY = 0;\n  }\n\n  topLeft() {\n    return findCornerCoordinates(\n      this.x,\n      this.y,\n      this.midPointX,\n      this.midPointY,\n      this.rotationAngle,\n    );\n  }\n\n  topRight() {\n    return findCornerCoordinates(\n      this.x + this.width,\n      this.y,\n      this.midPointX,\n      this.midPointY,\n      this.rotationAngle,\n    );\n  }\n\n  bottomLeft() {\n    return findCornerCoordinates(\n      this.x,\n      this.y + this.height,\n      this.midPointX,\n      this.midPointY,\n      this.rotationAngle,\n    );\n  }\n\n  bottomRight() {\n    return findCornerCoordinates(\n      this.x + this.width,\n      this.y + this.height,\n      this.midPointX,\n      this.midPointY,\n      this.rotationAngle,\n    );\n  }\n\n  updatePos() {\n    this.x += this.dX;\n    this.y += this.dY;\n  }\n}\n\nexport default Rectangle;\n","// following this tutorial\n// https://www.gamedev.net/articles/programming/general-and-gameplay-programming/2d-rotated-rectangle-collision-r2604\n\nconst projectCornerToAxis = (corner, axis) => {\n  const projectedX = (corner.x * axis.x + corner.y * axis.y) / ((axis.x ** 2) + (axis.y ** 2)) * axis.x;\n  const projectedY = (corner.x * axis.x + corner.y * axis.y) / ((axis.x ** 2) + (axis.y ** 2)) * axis.y;\n\n  return { projectedX, projectedY };\n};\n\nconst scalarValues = (projectedCorners, axis) => projectedCorners.map((corner) => {\n  const { projectedX, projectedY } = corner;\n  return projectedX * axis.x + projectedY * axis.y;\n});\n\nconst checkScalarForColision = (scalar1, scalar2) => {\n  const min1 = Math.min(...scalar1);\n  const max1 = Math.max(...scalar1);\n\n  const min2 = Math.min(...scalar2);\n  const max2 = Math.max(...scalar2);\n\n  if (min2 <= max1 && min1 <= max2) {\n    return true;\n  }\n  return false;\n};\n\nconst isCollided = (rect1, rect2) => {\n  const axis1 = {\n    x: rect1.topRight().x - rect1.topLeft().x,\n    y: rect1.topRight().y - rect1.topLeft().y,\n  };\n  const axis2 = {\n    x: rect1.topRight().x - rect1.bottomRight().x,\n    y: rect1.topRight().y - rect1.bottomRight().y,\n  };\n  const axis3 = {\n    x: rect2.topLeft().x - rect2.bottomLeft().x,\n    y: rect2.topLeft().y - rect2.bottomLeft().y,\n  };\n  const axis4 = {\n    x: rect2.topLeft().x - rect2.topRight().x,\n    y: rect2.topLeft().y - rect2.topRight().y,\n  };\n\n  const corners1 = [rect1.topRight(), rect1.topLeft(), rect1.bottomRight(), rect1.bottomLeft()];\n  const corners2 = [rect2.topRight(), rect2.topLeft(), rect2.bottomRight(), rect2.bottomLeft()];\n\n  const axes = [axis1, axis2, axis3, axis4];\n\n  for (let i = 0; i < axes.length; i += 1) {\n    const corners1ToAxis = corners1.map(corner => projectCornerToAxis(corner, axes[i]));\n    const corners2ToAxis = corners2.map(corner => projectCornerToAxis(corner, axes[i]));\n\n    const scalar1 = scalarValues(corners1ToAxis, axes[i]);\n    const scalar2 = scalarValues(corners2ToAxis, axes[i]);\n\n    if (checkScalarForColision(scalar1, scalar2) === false) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport default isCollided;\n","import Rectangle from './rectangle';\nimport isCollided from './collision_detection';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.querySelector('canvas');\n  canvas.width = 500;\n  canvas.height = 500;\n  const ctx = canvas.getContext('2d');\n\n  // new Rectangle(x, y, width, height, angle)\n  const rotatedRect = new Rectangle(100, 100, 80, 20, 80);\n  const testRect = new Rectangle(100, 100, 80, 20, 20);\n\n  const draw = (fps) => {\n    const fpsInterval = 1000 / fps;\n    let then = performance.now();\n\n    const drawRect = (rect) => {\n      ctx.save();\n      ctx.translate(\n        rect.x + rect.width / 2,\n        rect.y + rect.height / 2,\n      );\n      ctx.rotate(rect.rotationAngle);\n      ctx.fillRect(-rect.width / 2, -rect.height / 2, rect.width, rect.height);\n      ctx.restore();\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      const now = performance.now();\n      const elapsed = now - then;\n\n      if (elapsed > fpsInterval) {\n        then = now - (elapsed % fpsInterval);\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        drawRect(rotatedRect);\n\n        testRect.updatePos();\n        if (isCollided(rotatedRect, testRect)) {\n          ctx.fillStyle = 'red';\n        } else {\n          ctx.fillStyle = 'green';\n        }\n        drawRect(testRect);\n      }\n    };\n\n    animate();\n  };\n\n  draw(60);\n\n  document.addEventListener('keydown', ({ key }) => {\n    if (key === 'w') {\n      testRect.dY = -5;\n    }\n    if (key === 's') {\n      testRect.dY = 5;\n    }\n    if (key === 'a') {\n      testRect.dX = -5;\n    }\n    if (key === 'd') {\n      testRect.dX = 5;\n    }\n  });\n\n  document.addEventListener('keyup', ({ key }) => {\n    if (key === 'w') {\n      testRect.dY = 0;\n    }\n    if (key === 's') {\n      testRect.dY = 0;\n    }\n    if (key === 'a') {\n      testRect.dX = 0;\n    }\n    if (key === 'd') {\n      testRect.dX = 0;\n    }\n  });\n});\n"]}